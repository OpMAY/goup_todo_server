<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.ProductMapper">
    <resultMap id="Product" type="com.model.kream.product.Product">
        <result column="product_info" property="product_info" typeHandler="com.middleware.JsonObjectTypeHandler"/>
        <result column="images" property="images" typeHandler="com.middleware.JsonArrayObjectTypeHandler"/>
    </resultMap>
    <resultMap id="ProductMain" type="com.model.kream.product.ProductMain">
        <result column="image" property="image" typeHandler="com.middleware.JsonObjectTypeHandler"/>
    </resultMap>
    <resultMap id="ProductShop" type="com.model.kream.product.ProductShop">
        <result column="image" property="image" typeHandler="com.middleware.JsonObjectTypeHandler"/>
    </resultMap>
    <select id="getProductByNo" resultType="Product" resultMap="Product">
        select *
        from product
        WHERE no = #{no}
    </select>
    <select id="getProductsByCategory" resultType="Product" resultMap="Product">
        select *
        from product
        WHERE category_no in
        <foreach item="no" index="index" collection="list"
                 open="(" separator="," close=")">
            #{no}
        </foreach>
    </select>
    <!-- 판매 화면에서 사이즈 별 구매 입찰 최대 금액 가져오기 => 거래 생성 안된 부분으로 -->
    <select id="getProductPurchasePrices" resultType="ProductPriceWithSize">
        select product.no,
               size,
               MAX(p.price) as price
        from product
                 left join size s on product.no = s.product_no
                 left join purchase p on s.no = p.size_no
                 left join `order` o on p.no = o.purchase_no
        WHERE o.no is null
          AND (p.purchase_type = 'AUCTION' OR p.purchase_type is null)
          AND (p.p_bid_flag = true OR p.p_bid_flag is null)
          AND product.no = #{product_no}
        group by size
        order by size;
    </select>
    <!-- 구매 화면에서 사이즈 별 구매 입찰 최대 금액 가져오기 (거래 생성 안된 부분으로) -->
    <select id="getProductSellPrices" resultType="ProductPriceWithSize">
        select product.no,
               size,
               MIN(sell.price) as price
        from product
                 left join size s on product.no = s.product_no
                 left join sell on s.no = sell.size_no
                 left join `order` o on sell.no = o.sell_no
        WHERE o.no is null
          AND (sell.sell_type = 'AUCTION' OR sell.sell_type is null)
          AND (sell.s_bid_flag = true OR sell.s_bid_flag is null)
          AND product.no = #{product_no}
        group by size
        order by size;
    </select>
    <!-- 판매 입찰 현황 내역 중 가장 낮은 금액 가져오기 -->
    <select id="getProductLowestSellPrice" resultType="ProductPriceWithSize">
        select *
        from (select product.no,
                     MIN(sell.price) as price
              from product
                       left join size s on product.no = s.product_no
                       left join sell on s.no = sell.size_no
                       left join `order` o on sell.no = o.sell_no
              WHERE o.no is null
                AND sell.sell_type = 'AUCTION'
                AND sell.s_bid_flag = true
                AND product.no = #{product_no}
              order by size) as t
        WHERE t.price is not null;
    </select>
    <!--  구매 입찰 현황 내역 중 가장 높은 금액 가져오기  -->
    <select id="getProductHighestPurchasePrice" resultType="ProductPriceWithSize">
        select *
        from (select product.no,
                     MAX(p.price) as price
              from product
                       left join size s on product.no = s.product_no
                       left join purchase p on s.no = p.size_no
                       left join `order` o on p.no = o.purchase_no
              WHERE o.no is null
                AND p.purchase_type = 'AUCTION'
                AND p.p_bid_flag = true
                AND product.no = 1
              order by size) as t
        WHERE price is not null;
    </select>
    <!-- 상품 거래 내역에 관한 것-->
    <select id="getProductOrderHistory" resultType="ProductPriceWithSize">
        select size, s.price, o.reg_datetime
        from product
                 left join size on product.no = size.product_no
                 left join sell s on size.no = s.size_no
                 left join purchase p on size.no = p.size_no
                 left join `order` o on s.no = o.sell_no or p.no = o.purchase_no
        WHERE product.no = #{product_no}
          AND o.no is not null
        GROUP BY o.reg_datetime, o.no
        ORDER BY o.reg_datetime DESC;
    </select>
    <!--  기간 별 거래 내역 금액  -->
    <select id="getProductPriceHistory" resultType="ProductPriceHistory">
        select price, target_date
        from (select s.price,
        DATE_FORMAT(o.reg_datetime, '%Y-%m-%d') as target_date,
        ROW_NUMBER() over (partition by o.reg_datetime ORDER BY o.reg_datetime DESC) as order_number
        from product
        left join size on product.no = size.product_no
        left join sell s on size.no = s.size_no
        left join purchase p on size.no = p.size_no
        left join `order` o on s.no = o.sell_no or p.no = o.purchase_no
        WHERE product.no = #{product_no}
        <choose>
            <when test="type.name() eq 'MONTHLY'">
                AND DATE_FORMAT(o.reg_datetime, '%Y-%m-%d') BETWEEN DATE_ADD(NOW(), INTERVAL -1 MONTH) AND NOW()
            </when>
            <when test="type.name() eq 'QUARTER'">
                AND DATE_FORMAT(o.reg_datetime, '%Y-%m-%d') BETWEEN DATE_ADD(NOW(), INTERVAL -3 MONTH) AND NOW()
            </when>
            <when test="type.name() eq 'HALF'">
                AND DATE_FORMAT(o.reg_datetime, '%Y-%m-%d') BETWEEN DATE_ADD(NOW(), INTERVAL -6 MONTH) AND NOW()
            </when>
            <when test="type.name() eq 'YEARLY'">
                AND DATE_FORMAT(o.reg_datetime, '%Y-%m-%d') BETWEEN DATE_ADD(NOW(), INTERVAL -1 YEAR) AND NOW()
            </when>
            <otherwise>
            </otherwise>
        </choose>
        AND o.no is not null
        GROUP BY target_date, o.no
        ORDER BY target_date DESC) as t
        WHERE order_number = 1;
    </select>
    <update id="updateProductViews">
        update product
        SET views = views + 1
        WHERE no = #{no}
    </update>
    <select id="getMainProducts" resultType="ProductMain" resultMap="ProductMain">
        select no, en_name as name, JSON_EXTRACT(images, '$[0]') as image
        from product
        # TODO 조건 추가
    </select>
    <select id="getMainPopularProducts" resultType="ProductMain" resultMap="ProductMain">
        select no,
               en_name                                                                as name,
               JSON_EXTRACT(images, '$[0]')                                           as image,
               (select COUNT(*)
                from wish
                WHERE size_no in (select no from size WHERE product_no = product.no)) as wishes,
               (select COUNT(*)
                from `purchase`
                WHERE size_no in (select no from size WHERE product_no = product.no)) as purchases,
               views
        from product
        ORDER BY views DESC, wishes DESC, purchases DESC
        LIMIT 12
    </select>
    <select id="getMainRecentProducts" resultType="ProductMain" resultMap="ProductMain">
        select no, en_name, kor_name, JSON_EXTRACT(images, '$[0]') as image
        from product
        order by reg_datetime DESC
        LIMIT 12
    </select>
    <select id="getProductBySizeNo" resultType="Product">
        select *
        from product
        WHERE no = (select product_no from size WHERE no = #{size_no})
    </select>
    <select id="searchProductWithFilters" resultType="ProductShop" resultMap="ProductShop">
        select no,
        kor_name,
        en_name,
        brand_no,
        brand_name,
        gender,
        category_no,
        image,
        price,
        orders
        from (select product.no,
        kor_name,
        en_name,
        brand_no,
        gender,
        category_no,
        brand.name as brand_name,
        JSON_EXTRACT(product.images, '$[0]') as image,
        MIN(sell.price) as price,
        JSON_ARRAYAGG(s.size) as size_json,
        (select COUNT(*)
        from sell
        left join `order` o2 on sell.no = o2.sell_no
        left join size s2 on sell.size_no = s2.no
        left join product p on s2.product_no = p.no
        WHERE o2.no is not null
        AND p.no = product.no) as orders
        from product
        left join brand on product.brand_no = brand.no
        left join size s on product.no = s.product_no
        left join sell on s.no = sell.size_no
        left join `order` o on sell.no = o.sell_no
        WHERE (o.no is null
        AND sell.sell_type = 'AUCTION'
        AND sell.s_bid_flag = true) or (o.no is null AND sell.no is null)
        GROUP BY product.no) as t
        <if test="filtered == true">
            WHERE
            <if test="brand_list neq null and brand_list.size() > 0">
                brand_no in
                <foreach collection="brand_list" item="brand_no" open="(" separator="," close=")">
                    #{brand_no}
                </foreach>
                # 브랜드
            </if>
            <if test="gender_list neq null and gender_list.size() > 0">
                <if test="brand_list neq null and brand_list.size() > 0">
                    AND
                </if>
                gender in
                <foreach collection="gender_list" item="gender_no" open="(" separator="," close=")">
                    #{gender_no}
                </foreach># 성별
            </if>
            <if test="category_list neq null and category_list.size() > 0">
                <if test="(brand_list neq null and brand_list.size() > 0) or (gender_list neq null and gender_list.size() > 0)">
                    AND
                </if>
                (category_no in
                <foreach collection="category_list" item="category_no" open="(" separator="," close=")">
                    #{category_no}
                </foreach>
                OR (select parent_no from category WHERE category.no = t.category_no) in
                <foreach collection="category_list" item="category_no" open="(" separator="," close=")">
                    #{category_no}
                </foreach>
                ) # 카테고리
            </if>
            <if test="keyword neq null">
                <if test="(brand_list neq null and brand_list.size() > 0) or (gender_list neq null and gender_list.size() > 0) or (category_list neq null and category_list.size() > 0)">
                    AND
                </if>
                (en_name LIKE CONCAT('%', #{keyword}, '%') OR kor_name LIKE CONCAT('%', #{keyword}, '%') OR brand_name
                LIKE CONCAT('%', #{keyword}, '%')) # 검색어
            </if>
            <if test="size_list neq null and size_list.size() > 0">
                <if test="(brand_list neq null and brand_list.size() > 0) or (gender_list neq null and gender_list.size() > 0) or (category_list neq null and category_list.size() > 0) or keyword neq null">
                    AND
                </if>
                <foreach collection="size_list" item="size" open="(" separator="OR" close=")" index="idx">
                    #{size} MEMBER OF (size_json ->> '$')
                </foreach>
                # 사이즈
            </if>
        </if>
        ORDER BY orders DESC, no DESC LIMIT 10;
    </select>
    <select id="searchProductWithFiltersReload" resultType="ProductShop" resultMap="ProductShop">
        select no,
        kor_name,
        en_name,
        brand_no,
        brand_name,
        gender,
        category_no,
        image,
        price,
        orders
        from (select product.no,
        kor_name,
        en_name,
        brand_no,
        gender,
        category_no,
        brand.name as brand_name,
        JSON_EXTRACT(product.images, '$[0]') as image,
        MIN(sell.price) as price,
        JSON_ARRAYAGG(s.size) as size_json,
        (select COUNT(*)
        from sell
        left join `order` o2 on sell.no = o2.sell_no
        left join size s2 on sell.size_no = s2.no
        left join product p on s2.product_no = p.no
        WHERE o2.no is not null
        AND p.no = product.no) as orders
        from product
        left join brand on product.brand_no = brand.no
        left join size s on product.no = s.product_no
        left join sell on s.no = sell.size_no
        left join `order` o on sell.no = o.sell_no
        WHERE (o.no is null
        AND sell.sell_type = 'AUCTION'
        AND sell.s_bid_flag = true) or (o.no is null AND sell.no is null)
        GROUP BY product.no) as t
        <if test="filtered == true">
            WHERE
            <if test="brand_list neq null and brand_list.size() > 0">
                brand_no in
                <foreach collection="brand_list" item="brand_no" open="(" separator="," close=")">
                    #{brand_no}
                </foreach>
                # 브랜드
            </if>
            <if test="gender_list neq null and gender_list.size() > 0">
                <if test="brand_list neq null and brand_list.size() > 0">
                    AND
                </if>
                gender in
                <foreach collection="gender_list" item="gender_no" open="(" separator="," close=")">
                    #{gender_no}
                </foreach># 성별
            </if>
            <if test="category_list neq null and category_list.size() > 0">
                <if test="(brand_list neq null and brand_list.size() > 0) or (gender_list neq null and gender_list.size() > 0)">
                    AND
                </if>
                (category_no in
                <foreach collection="category_list" item="category_no" open="(" separator="," close=")">
                    #{category_no}
                </foreach>
                OR (select parent_no from category WHERE category.no = t.category_no) in
                <foreach collection="category_list" item="category_no" open="(" separator="," close=")">
                    #{category_no}
                </foreach>
                ) # 카테고리
            </if>
            <if test="keyword neq null">
                <if test="(brand_list neq null and brand_list.size() > 0) or (gender_list neq null and gender_list.size() > 0) or (category_list neq null and category_list.size() > 0)">
                    AND
                </if>
                (en_name LIKE CONCAT('%', #{keyword}, '%') OR kor_name LIKE CONCAT('%', #{keyword}, '%') OR brand_name
                LIKE CONCAT('%', #{keyword}, '%')) # 검색어
            </if>
            <if test="size_list neq null and size_list.size() > 0">
                <if test="(brand_list neq null and brand_list.size() > 0) or (gender_list neq null and gender_list.size() > 0) or (category_list neq null and category_list.size() > 0) or keyword neq null">
                    AND
                </if>
                <foreach collection="size_list" item="size" open="(" separator="OR" close=")" index="idx">
                    (#{size} MEMBER OF (size_json ->> '$'))
                </foreach>
                # 사이즈
            </if>
        </if>
        ORDER BY orders DESC, no DESC LIMIT #{cursor}, 10
    </select>
    <select id="getProductCountViaSearch" resultType="ProductShop">
        select no, price
        from (select product.no,
        kor_name,
        en_name,
        brand_no,
        gender,
        category_no,
        brand.name as brand_name,
        MIN(sell.price) as price,
        JSON_ARRAYAGG(s.size) as size_json
        from product
        left join brand on product.brand_no = brand.no
        left join size s on product.no = s.product_no
        left join sell on s.no = sell.size_no
        left join `order` o on sell.no = o.sell_no
        WHERE (o.no is null
        AND sell.sell_type = 'AUCTION'
        AND sell.s_bid_flag = true) or (o.no is null AND sell.no is null)
        GROUP BY product.no) as t
        <if test="filtered == true">
            WHERE
            <if test="brand_list neq null and brand_list.size() > 0">
                brand_no in
                <foreach collection="brand_list" item="brand_no" open="(" separator="," close=")">
                    #{brand_no}
                </foreach>
                # 브랜드
            </if>
            <if test="gender_list neq null and gender_list.size() > 0">
                <if test="brand_list neq null and brand_list.size() > 0">
                    AND
                </if>
                gender in
                <foreach collection="gender_list" item="gender_no" open="(" separator="," close=")">
                    #{gender_no}
                </foreach># 성별
            </if>
            <if test="category_list neq null and category_list.size() > 0">
                <if test="(brand_list neq null and brand_list.size() > 0) or (gender_list neq null and gender_list.size() > 0)">
                    AND
                </if>
                (category_no in
                <foreach collection="category_list" item="category_no" open="(" separator="," close=")">
                    #{category_no}
                </foreach>
                OR (select parent_no from category WHERE category.no = t.category_no) in
                <foreach collection="category_list" item="category_no" open="(" separator="," close=")">
                    #{category_no}
                </foreach>
                ) # 카테고리
            </if>
            <if test="keyword neq null">
                <if test="(brand_list neq null and brand_list.size() > 0) or (gender_list neq null and gender_list.size() > 0) or (category_list neq null and category_list.size() > 0)">
                    AND
                </if>
                (en_name LIKE CONCAT('%', #{keyword}, '%') OR kor_name LIKE CONCAT('%', #{keyword}, '%') OR brand_name
                LIKE CONCAT('%', #{keyword}, '%')) # 검색어
            </if>
            <if test="size_list neq null and size_list.size() > 0">
                <if test="(brand_list neq null and brand_list.size() > 0) or (gender_list neq null and gender_list.size() > 0) or (category_list neq null and category_list.size() > 0) or keyword neq null">
                    AND
                </if>
                <foreach collection="size_list" item="size" open="(" separator="OR" close=")" index="idx">
                    #{size} MEMBER OF (size_json ->> '$')
                </foreach>
                # 사이즈
            </if>
        </if>
    </select>
    <insert id="registerProduct" useGeneratedKeys="true" keyProperty="no">
        insert into product(price, en_name, gender, is_direct, product_info, kor_name, product_yn, brand_no,
                            is_one_size, category_no, views, images, reg_datetime, updated_datetime)
        VALUES (0, #{en_name}, #{gender}, false, #{product_info, typeHandler=com.middleware.JsonObjectTypeHandler},
                #{kor_name}, true, #{brand_no}, #{is_one_size}, #{category_no}, 0,
                #{images, typeHandler=com.middleware.JsonArrayObjectTypeHandler}, now(), now())
    </insert>
    <update id="updateProductFlag">
        update product
        SET product_yn       = !product_yn,
            updated_datetime = now()
        WHERE no = #{no}
    </update>
    <update id="updateProduct">
        update product
        SET en_name          = #{en_name},
            gender           = #{gender},
            product_info     = #{product_info, typeHandler=com.middleware.JsonObjectTypeHandler},
            is_one_size      = #{is_one_size},
            images           = #{images, typeHandler=com.middleware.JsonArrayObjectTypeHandler},
            updated_datetime = now()
        WHERE no = #{no}
    </update>
    <delete id="deleteProduct">
        delete
        from product
        WHERE no = #{no}
    </delete>
    <select id="checkProductHasTransaction" resultType="_boolean">
        select EXISTS(select * from sell WHERE size_no in (select no from size WHERE product_no = #{no})) OR
               EXISTS(select * from purchase WHERE size_no in (select no from size WHERE product_no = #{no}))
    </select>
    <select id="checkProductNameDuplicate" resultType="_boolean">
        select EXISTS(select * from product WHERE en_name = #{en_name} or kor_name = #{kor_name})
    </select>
    <select id="getAllProducts" resultType="Product" resultMap="Product">
        select *
        from product
        ORDER BY reg_datetime DESC
    </select>
    <select id="getBrandProducts" resultType="Product" resultMap="Product">
        select *
        from product
        WHERE brand_no = #{brand_no}
    </select>
    <select id="getCategoryProductCount" resultType="int">
        select COUNT(*)
        from product
        WHERE category_no = #{category_no}
           OR category_no in (select no from category WHERE parent_no = #{category_no})
    </select>
</mapper>