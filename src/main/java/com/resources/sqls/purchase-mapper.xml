<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.PurchaseMapper">
    <resultMap id="Purchase" type="com.model.kream.order.before.Purchase">
        <result column="purchase_agree" property="purchase_agree" typeHandler="com.middleware.JsonObjectTypeHandler"/>
        <result column="p_order_agree" property="p_order_agree" typeHandler="com.middleware.JsonObjectTypeHandler"/>
        <result column="delivery_info" property="delivery_info" typeHandler="com.middleware.JsonObjectTypeHandler"/>
        <result column="receipt" property="receipt" typeHandler="com.middleware.JsonObjectTypeHandler"/>
    </resultMap>
    <resultMap id="PurchaseList" type="com.model.kream.shop.PurchaseList">
        <result column="images" property="images" typeHandler="com.middleware.JsonObjectTypeHandler"/>
    </resultMap>
    <select id="getProductPurchaseHistory" resultType="ProductPriceWithSizeAndCount">
        select (select size from size WHERE no = p.size_no)                                     as size,
               price,
               (select COUNT(*) from purchase pp WHERE size_no = p.size_no AND price = p.price) as count
        from purchase p
        WHERE size_no in (select no from size WHERE product_no = #{product_no})
        GROUP BY size_no, price
        ORDER BY price
    </select>
    <select id="getSizeProductPurchaseHighestPrice" resultType="integer">
        select price
        from purchase
                 left join `order` on purchase.no = `order`.purchase_no
        WHERE size_no = #{size_no}
          AND `order`.no is null
        ORDER BY price
        LIMIT 1
    </select>
    <select id="getPurchaseForOrder" resultType="Purchase" resultMap="Purchase">
        select *
        from purchase
                 left join `order` o on purchase.no = o.purchase_no
        WHERE size_no = #{size_no}
          AND price = #{price}
          AND o.no is null
        ORDER BY purchase.reg_datetime
        LIMIT 1
    </select>
    <insert id="registerPurchase" keyProperty="no" useGeneratedKeys="true">
        insert into purchase(user_no, size_no, purchase_agree, purchase_type, expiration_date, expiration_days, price,
                             delivery_info, delivery_method, point, commission, delivery_price, total_price,
                             payment_method, receipt, p_order_agree, reg_datetime, updated_datetime)
        VALUES (#{user_no}, #{size_no}, #{purchase_agree, typeHandler=com.middleware.JsonObjectTypeHandler},
                #{purchase_type},
                #{expiration_date}, #{expiration_days}, #{price},
                #{delivery_info, typeHandler=com.middleware.JsonObjectTypeHandler}, #{delivery_method}, #{point},
                #{commission},
                #{delivery_price}, #{total_price},
                #{payment_method}, #{receipt, typeHandler=com.middleware.JsonObjectTypeHandler},
                #{p_order_agree, typeHandler=com.middleware.JsonObjectTypeHandler}, NOW(), NOW())
    </insert>

    <!--구매내역 - 구매입찰-->
    <select id="getMyPurchase" resultType="PurchaseList" resultMap="PurchaseList">
        select pu.no,pu.expiration_date,JSON_EXTRACT(p.images,'$[0]')as images,p.en_name,p.kor_name,s.size
               from purchase pu
        left join size s on pu.size_no = s.no
        left join product p on s.product_no = p.no
        where user_no = #{user_no} and
        <if test="after == true">
            pu.expiration_date <![CDATA[ >= ]]>now();
        </if>
        <if test="after == false">
            pu.expiration_date <![CDATA[ < ]]>now();
        </if>
    </select>


<!--구매내역 - 진행중-->
    <select id="getMyPurchaseByOrder" resultType="PurchaseList" resultMap="PurchaseList">
        select p.no,d.status,ss.type,JSON_EXTRACT(p2.images,'$[0]')as images,p2.en_name,p2.kor_name,si.size
               from purchase p
        inner join `order` o on p.no = o.purchase_no
        left join delivery d on d.order_no = o.no
        left join sell_stock ss on ss.order_no = o.purchase_no
        left join size si on si.no = p.size_no
        left join product p2 on p2.no = si.product_no

        where user_no = #{user_no}

        <if test="status != null">
            and d.status = #{status}
        </if>
        <if test="type !=null">
            and ss.type = #{type}
        </if>


    </select>

<!--    구매내역-종료-->
    <select id="getCompletePurchase" resultType="PurchaseList" resultMap="PurchaseList">
        select p.no,d.status,JSON_EXTRACT(p2.images,'$[0]')as images,p2.en_name,p2.kor_name,si.size
        from purchase p
        left join `order` o on p.no = o.purchase_no
        left join delivery d on o.no = d.order_no
        left join size si on si.no = p.size_no
        left join product p2 on p2.no = si.product_no
        where  user_no = #{user_no}
        and d.status = #{status}


    </select>
</mapper>