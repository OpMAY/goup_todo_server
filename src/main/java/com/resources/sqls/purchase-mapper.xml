<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.PurchaseMapper">
    <resultMap id="Purchase" type="com.model.kream.order.before.Purchase">
        <result column="purchase_agree" property="purchase_agree" typeHandler="com.middleware.JsonObjectTypeHandler"/>
        <result column="p_order_agree" property="p_order_agree" typeHandler="com.middleware.JsonObjectTypeHandler"/>
        <result column="delivery_info" property="delivery_info" typeHandler="com.middleware.JsonObjectTypeHandler"/>
        <result column="receipt" property="receipt" typeHandler="com.middleware.JsonObjectTypeHandler"/>
    </resultMap>
    <select id="getProductPurchaseHistory" resultType="ProductPriceWithSizeAndCount">
        select (select size from size WHERE no = p.size_no)                                     as size,
               price,
               (select COUNT(*) from purchase pp WHERE size_no = p.size_no AND price = p.price) as count
        from purchase p
        WHERE size_no in (select no from size WHERE product_no = #{product_no})
        GROUP BY size_no, price
        ORDER BY price
    </select>
    <select id="getSizeProductPurchaseHighestPrice" resultType="integer">
        select price
        from purchase
                 left join `order` on purchase.no = `order`.purchase_no
        WHERE size_no = #{size_no}
          AND `order`.no is null
        ORDER BY price
        LIMIT 1
    </select>
    <select id="getPurchaseForOrder" resultType="Purchase" resultMap="Purchase">
        select *
        from purchase
                 left join `order` o on purchase.no = o.purchase_no
        WHERE size_no = #{size_no}
          AND price = #{price}
          AND o.no is null
        ORDER BY purchase.reg_datetime
        LIMIT 1
    </select>
    <insert id="registerPurchase" keyProperty="no" useGeneratedKeys="true">
        insert into purchase(user_no, size_no, purchase_agree, purchase_type, expiration_date, expiration_days, price,
                             delivery_info, delivery_method, point, commission, delivery_price, total_price,
                             payment_method, receipt, p_order_agree, reg_datetime, updated_datetime)
        VALUES (#{user_no}, #{size_no}, #{purchase_agree, typeHandler=com.middleware.JsonObjectTypeHandler},
                #{purchase_type},
                #{expiration_date}, #{expiration_days}, #{price},
                #{delivery_info, typeHandler=com.middleware.JsonObjectTypeHandler}, #{delivery_method}, #{point},
                #{commission},
                #{delivery_price}, #{total_price},
                #{payment_method}, #{receipt, typeHandler=com.middleware.JsonObjectTypeHandler},
                #{p_order_agree, typeHandler=com.middleware.JsonObjectTypeHandler}, NOW(), NOW())
    </insert>

    <!--구매내역 - 구매입찰-->
    <select id="getMyPurchase" resultType="Purchase" resultMap="Purchase">
        select * from purchase
        where user_no = #{user_no} and
        <if test="after == true">
            expiration_date <![CDATA[ >= ]]>now();
        </if>
        <if test="after == false">
            expiration_date <![CDATA[ < ]]>now();
        </if>
    </select>


<!--구매내역 - 진행중-->
    <select id="getMyPurchaseByOrder" resultType="Purchase">
        select * from purchase p
        inner join `order` o on p.no = o.sell_no
        left join delivery d on d.order_no = o
        left join inspection i on o.no = i.order_no
        left join size s2 on p.size_no = s2.no
        left join product pr on pr.no = s2.product_no

        where user_no = #{user_no}
        <if test="status != null">
            and ss.status = #{status}
        </if>
        <if test="type != null">
            and i.type = #{type}
        </if>
        <if test="order_status != null">
            and o.order_status = #{order_status}
        </if>

    </select>

<!--    구매내역-종료-->
    <select id="getMyPurchaseNotByOrder" resultType="Purchase">
        select * from purchase p
        left outer join `order` o on p.no = o.sell_no
        where sell_no is null
        and user_no = #{user_no}
        <if test="sell_type != null">
            and purchase_type = #{purchase_type}
        </if>

    </select>
</mapper>